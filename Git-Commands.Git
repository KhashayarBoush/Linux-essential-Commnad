# Git Learn 
===================================================================
# create a repository

Step 1 : 
	-> git init

Step 2 : 
	-> git add

Step 3 : 
	-> git commit - m " [ massage ] "

Step 4 : 
	// show Log Files and Read Commits
	-> git log

Step 5 :
 	// show Changes in Projects
	-> git diff HEAD
	// when you add A git file you can See changes in Stage Level
	-> git diff --staged -> now you can see Chanes in Staged Level . 

Step 6 : 
	// if you Want close File in staged Mode For Cancel to commit and add
	-> git reset [ file name ]
	// now , no file in there for commit

Step 7 : 
	// if you wnat to Really close File and cant show File in Status
	// and Recover to Privus File 
	-> git checkout -- [ file name ]
	// now , file delete in commit and stage and add MOOD and returned to privus 		Version Or Returned To last Commit . 

Step 8 : 
	// Add A branch in Repositpory -----|->\ as tree 
	-> git branch // show branchs
	-> git branch [ branch name ] 
	// For switch to other  Branch 
	-> git checkout [ branch name ] 

Step 9 : 
	// switch To master  -> git checkou master
	-> git merg [ branch name ] 
	// when A branch Link to Master You Want to Delete them
	-> git branch -d [ branch name ]	

Step 10 : 
	// if you want to Delete a File 
	git rm [ file name ]
------------------------------------------------------------------
# Remote

	// for get a repo in git hub
	-> git clone [ repo addr ]
	
	// for push and edit repo 
	-> git push origin master // after add and commit
	
	// we can get update without pass and user 
	-> git pull origin master 
	
	// for rename the repo 
	-> git remote rename [old name] [new name]



-------------------------------------------------------------------

# Tags
	// use tags for Create V. of repository
	-> git tag // show All tags
	-> git tag -a [tag name] -m [massage] // use for current repository
	-> git tag -a [tag name][ number of commit] // use for other commits
	
	// for push tags
	-> git push origin --tags // upload all tag in one thread
	git push [tag name] // for push one tag
	 
	// for get oldest tags 
	-> git checkout v1.8 // you can take a branch and edit this 

	// for create a short tag 
	git tag [tag name]

	// for delete a tag 
	-> git tag -d [tag name]
-------------------------------------------------------------------

# git blame
	// you can find who work on lines of repositorys 
	// and see who changes files line by line
	-> git blame [file name] -L [line number ] 
--------------------------------------------------------------------

# bisect

	// use bisect for find best release for project
	-> git bisect start
	-> git bisect bad
	-> git bisect good 
	-> git bisect [ release commit Work good]
---------------------------------------------------------------------

# create A server on Github With shell
	// After Do Cerate a Directory and install git -> git init 
	// create files and Fllow this step
	-> git remote add origin [repo addr]
	
	// and push files on server 
	-> git push origin master
----------------------------------------------------------------------

# gitignore use for hidden files in repo and nobody cant accsess to files
	
	// for this action create a .gitignore in master Directory
	// after do this Push files to server
	// what you files hidden 
	// hold file names in this file
	-> git status
	-> git push origin master
	-> vim .gitignore
	-> git status
	-> git push origin master
	
	// open the ignore files and save files name to hidden of repo
	-> vim .gitignore
	-> git push origin master
-----------------------------------------------------------------------

# Diff
	// for compare with 2 commit use Diff commnad
	-> git log 
	
	// use the last number of commit 
	// and copy number of commit for compare
	-> git diff [c1] .. [c2]	
------------------------------------------------------------------------

# commit 
	// for undo a commit use this step
	-> git commitb--amend
------------------------------------------------------------------------

# Reset 
	// use this option for close file in add or staged moood
	-> git reset HEAD [file name]
------------------------------------------------------------------------

# checkout
	// use checkout for cancel any changes in files
	-> vim [file name] // edited file
	-> git add [file name]
	-> git commit [file name] -m "[commit massage]"
	
	// the you know tho add a commit to file
	-> git commit --amend // for change commit massage
	
	// and for cancel any changes 
	-> git checkout [file name]
------------------------------------------------------------------------

# branch
	// for create and change to branch Shorter way
	-> git branch -b [ branch name ] // create and switch to branch 
	-> git branch -d [ branch name ] // for delete branch
	
	// if you create a branch and dot use this and dont merg with master 
	// for delete this 
	-> git branch -D [ branch name ] // localy delete branch
	
	// for show branch merged with master 
	-> git branch --merged
	
	// for show branchs not merged with master
	-> git branch --no-merged

	// for delete a branch on server 
	-> git push origin --delete [ branch name ]

	// for upload a branch use 
	-> git push origin [ branch name ] 
------------------------------------------------------------------------

# stash
	// when you edit file in master 
	// and you need to switch to other branch 
	
	// you can save state and switch to other branch with
	-> git stash 
	
	// when you work is other branch is down
	// go back in master and then use this commnad
	-> git stash apply 
	// and show changed in master directory
------------------------------------------------------------------------
